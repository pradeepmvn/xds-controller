apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-deployment
  labels:
    app: envoy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: envoy
  template:
    metadata:
      labels:
        app: envoy
    spec:
      containers:
        - name: envoy
          command:
            - envoy
          args:
            - "-c /etc/envoy/envoy.yaml"
            - "--log-level info"
            - "--log-format %L. envoy]%v"
            - "--log-format-escaped"
            - "--enable-fine-grain-logging"
            - "--component-log-level upstream:debug,connection:debug"
          image: envoyproxy/envoy:v1.24.0
          imagePullPolicy: Never
          # env:
          #   - name: "GRPC_GO_LOG_SEVERITY_LEVEL"
          #     value: info
          ports:
            - name: http
              containerPort: 8082
          resources:
            requests:
              cpu: 1
              memory: 1G
            limits:
              cpu: 1
              memory: 1G
          volumeMounts:
            - name: envoy-config
              mountPath: /etc/envoy
      volumes:
        - name: envoy-config
          configMap:
            name: envoy-config-map-cewwcs4rfgfy
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    note: envoy
  name: envoy
spec:
  ports:
    - name: http
      port: 8082
      protocol: TCP
      targetPort: 8082
    - name: admin-http
      protocol: TCP
      port: 8081
      targetPort: 8090
  selector:
    app: envoy
  clusterIP: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    note: envoy-config-map
  name: envoy-config-map-cewwcs4rfgfy
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - address:
            socket_address:
              address: 0.0.0.0
              port_value: 8082
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: AUTO
                    common_http_protocol_options:
                      idle_timeout: 900s
                    stat_prefix: ingress_http
                    http2_protocol_options:
                      max_concurrent_streams: 100
                    access_log:
                      name: envoy.access_loggers.file
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                        path: /dev/stdout
                        typed_json_format:
                          duration: "%DURATION%"
                          request_duration: "%REQUEST_DURATION%"
                          response_duration: "%RESPONSE_DURATION%"
                          route_name: "%ROUTE_NAME%"
                          upstream_host: "%UPSTREAM_HOST%"
                          upstream_failure_reason: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                          response_code: "%RESPONSE_CODE%"
                          response_flag: "%RESPONSE_FLAGS%"
                          grpc_status: "%GRPC_STATUS%"
                          response: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                          envoy_path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                          fwd: "%REQ(X-FORWARDED-FOR)%"
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: default
                          domains:
                            - "*"
                          routes:
                            - match:
                                prefix: "/hello.Person/"
                              route:
                                cluster: person_server
                                max_grpc_timeout: 100s
      clusters:
        - name: person_server
          type: STRICT_DNS
          # Comment out the following line to test on v6 networks
          dns_lookup_family: V4_ONLY
          lb_policy: ROUND_ROBIN
          close_connections_on_host_health_failure: true
          http2_protocol_options:
            max_concurrent_streams: 1000000000
          load_assignment:
            cluster_name: person_server
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: server.xds-test.svc.cluster.local
                          port_value: 8080
    admin:
      access_log_path: "/dev/stdout"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8090
